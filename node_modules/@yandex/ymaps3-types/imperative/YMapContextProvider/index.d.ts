import { YMapGroupEntity } from "../YMapEnities";
import type { Context } from "../Entities";
/**
 * YMapContextProvider props
 */
export type YMapContextProviderProps<T> = {
    /** Context that will receive the provided value */
    context: Context<T>;
    /** Value to be provided in the context. */
    value: T;
};
/**
 * Context provider for YMap, allowing to inject a context and its value.
 * @example
 * ```javascript
 * const mapContextProvider = new YMapContextProvider({context: SomeMapContext, value: {your: 'value'}});
 * mapContextProvider.addChild(new YMapDefaultSchemeLayer({}));
 * map.addChild(mapContextProvider);
 * ```
 * `YMapDefaultSchemeLayer` will receive the context `SomeMapContext` with the value `{ your: 'value' }`
 */
export declare class YMapContextProvider<T> extends YMapGroupEntity<YMapContextProviderProps<T>> {
    protected _onAttach(): void;
    protected _onUpdate({ value }: Partial<YMapContextProviderProps<T>>): void;
}
