import type { ReadonlyLngLat, ZoomRange } from "../../common/types";
export type LayerInfo = {
    id: string;
    zoomRange?: ZoomRange;
    copyrights?: string[];
    LayerMetaData?: unknown[];
    version?: string;
};
export type Coverage = Map<string, LayerInfo>;
export interface CoverageArgs {
    host: string;
    layers: string[];
    coordinates: ReadonlyLngLat;
    zoom: number;
    lang: string;
    maptype?: string | undefined;
}
declare function requestCoverage(args: CoverageArgs, signal?: AbortSignal): Promise<Coverage>;
interface RequestStampsArgs {
    host: string;
    layers: string[];
    lang: string;
}
declare function requestStamps(args: RequestStampsArgs, signal?: AbortSignal): Promise<Coverage>;
export { requestCoverage, requestStamps };
