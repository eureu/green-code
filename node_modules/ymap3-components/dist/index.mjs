import a, { createContext as h, useLayoutEffect as E, useEffect as w, useContext as M, useState as f, useMemo as C } from "react";
import x from "react-dom";
const Y = h({}), D = typeof document < "u" ? E : w;
function n(t, s) {
  let o;
  const l = ({ ...e }, p) => {
    const { reactify: r, ymaps: i } = M(
      Y
    ), [d, u] = f(!1);
    return D(() => {
      s ? window[s] ? (u(!0), o = r.module(window[s])[t]) : i.import(s).then((m) => {
        window[s] = m, r.module(m) && (u(!0), o = r.module(m)[t]);
      }) : (o = r.module(i)[t], u(!0));
    }, []), !o || !d ? null : /* @__PURE__ */ a.createElement(o, { ref: p, ...e });
  };
  return a.forwardRef(l);
}
const H = async (t, s = "ru_RU") => new Promise(async (o, l) => {
  if (window.ymaps3) {
    const e = window.ymaps3;
    await e.ready;
    const r = (await e.import("@yandex/ymaps3-reactify")).reactify.bindTo(a, x);
    r.module(e), o({
      ymaps: e,
      reactify: r
    });
  } else {
    const e = document.createElement("script");
    document.body.appendChild(e), e.type = "text/javascript", e.src = `https://api-maps.yandex.ru/v3/?apikey=${t}&lang=${s}`, e.onload = async () => {
      const p = window.ymaps3;
      await p.ready;
      const i = (await p.import("@yandex/ymaps3-reactify")).reactify.bindTo(a, x);
      o({
        ymaps: p,
        reactify: i
      });
    }, e.onerror = l;
  }
}), L = ({
  apiKey: t,
  lang: s,
  children: o,
  onLoad: l
}) => {
  const [e, p] = f();
  return D(() => {
    H(t, s).then((r) => {
      p(r), l && l(r);
    });
  }, []), e ? /* @__PURE__ */ a.createElement(Y.Provider, { value: e }, o) : /* @__PURE__ */ a.createElement(a.Fragment, null);
}, T = a.memo(L);
var c = /* @__PURE__ */ ((t) => (t.CartesianProjection = "@yandex/ymaps3-cartesian-projection@0.0.1", t.Clusterer = "@yandex/ymaps3-clusterer@0.0.1", t.Controls = "@yandex/ymaps3-controls@0.0.1", t.Hint = "@yandex/ymaps3-hint@0.0.1", t.Markers = "@yandex/ymaps3-markers@0.0.1", t.SphericalMercatorProjection = "@yandex/ymaps3-spherical-mercator-projection@0.0.1", t))(c || {});
const S = h({
  hint: void 0
}), v = ({
  children: t,
  context: s
}) => {
  const o = M(s);
  return /* @__PURE__ */ a.createElement(S.Provider, { value: o }, t);
}, j = ({ children: t, hint: s }) => {
  const { reactify: o, ymaps: l } = M(
    Y
  ), [e, p] = f(), r = C(() => {
    if (e) {
      const i = window[c.Hint];
      return o.module(i).YMapHint;
    }
  }, [e]);
  return w(() => {
    if (window[c.Hint]) {
      const i = window[c.Hint];
      p(o.module(i).YMapHintContext);
    } else
      l.import(c.Hint).then((i) => {
        window[c.Hint] = i, o.module(i) && p(o.module(i).YMapHintContext);
      });
  }, []), !r || !e || !t ? /* @__PURE__ */ a.createElement(a.Fragment, null) : /* @__PURE__ */ a.createElement(r, { hint: s }, /* @__PURE__ */ a.createElement(v, { context: e }, t));
}, b = a.forwardRef(({ gridSize: t, method: s, ...o }, l) => {
  const { reactify: e, ymaps: p } = M(
    Y
  ), [r, i] = f(), [d, u] = C(() => {
    if (r) {
      const y = window[c.Clusterer];
      return [e.module(y).YMapClusterer, s || e.module(y).clusterByGrid];
    }
    return [];
  }, [r]);
  w(() => {
    window[c.Clusterer] ? i(window[c.Clusterer]) : p.import(c.Clusterer).then((y) => {
      window[c.Clusterer] = y, i(y);
    });
  }, []);
  const m = C(() => {
    if (u && t)
      return u({ gridSize: t });
  }, [u, t]);
  return !d || !m ? /* @__PURE__ */ a.createElement(a.Fragment, null) : /* @__PURE__ */ a.createElement(
    d,
    {
      ref: l,
      method: m,
      ...o
    }
  );
}), B = n("YMapGeolocationControl", c.Controls), G = n("YMapZoomControl", c.Controls), $ = n("YMapClusterer", c.Clusterer), I = n("YMapDefaultMarker", c.Markers), W = n("YMap"), Z = n("YMapTileDataSource"), O = n("ThemeContext"), U = n("YMapControl"), _ = n("YMapLayer"), q = n("YMapMarker"), A = n("YMapDefaultSchemeLayer"), J = n("YMapDefaultFeaturesLayer"), K = n("YMapDefaultSatelliteLayer"), Q = n("YMapListener"), V = n("YMapControls"), X = n("YMapControlButton"), k = n("YMapContainer"), z = n("YMapCollection"), P = n("YMapFeature"), N = n("YMapFeatureDataSource");
export {
  O as ThemeContext,
  W as YMap,
  $ as YMapClusterer,
  z as YMapCollection,
  T as YMapComponentsProvider,
  k as YMapContainer,
  U as YMapControl,
  X as YMapControlButton,
  V as YMapControls,
  b as YMapCustomClusterer,
  J as YMapDefaultFeaturesLayer,
  I as YMapDefaultMarker,
  K as YMapDefaultSatelliteLayer,
  A as YMapDefaultSchemeLayer,
  P as YMapFeature,
  N as YMapFeatureDataSource,
  B as YMapGeolocationControl,
  j as YMapHint,
  S as YMapHintContext,
  _ as YMapLayer,
  Q as YMapListener,
  q as YMapMarker,
  Z as YMapTileDataSource,
  G as YMapZoomControl
};
